{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "lines_13 = np.genfromtxt('gemm_13_results.txt', delimiter=',', dtype=None)\n",
    "lines_14 = np.genfromtxt('gemm_14_results.txt', delimiter=',', dtype=None)\n",
    "\n",
    "N13_p00 = [line for line in lines_13 if line[1] == 0.0]\n",
    "N13_p05 = [line for line in lines_13 if line[1] == 0.5]\n",
    "N13_p08 = [line for line in lines_13 if line[1] == 0.8]\n",
    "\n",
    "N14_p00 = [line for line in lines_14 if line[1] == 0.0]\n",
    "N14_p05 = [line for line in lines_14 if line[1] == 0.5]\n",
    "N14_p08 = [line for line in lines_14 if line[1] == 0.8]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure()\n",
    "\n",
    "ns = [5, 10, 15, 20, 25, 30, 35, 40, 45]\n",
    "\n",
    "plt.plot([pt[0] for pt in N14_p00], [pt[3] for pt in N14_p00], 'o--', label='$N=2^{14},\\ p_1 =0.0$')\n",
    "plt.plot([pt[0] for pt in N14_p05], [pt[3] for pt in N14_p05], 'o--', label='$N=2^{14},\\ p_1 =0.5$')\n",
    "plt.plot([pt[0] for pt in N14_p08], [pt[3] for pt in N14_p08], 'o--', label='$N=2^{14},\\ p_1 =0.8$')\n",
    "\n",
    "plt.plot([pt[0] for pt in N13_p00], [pt[3] for pt in N13_p00], 'o-', label='$N=2^{13},\\ p_1 =0.0$')\n",
    "plt.plot([pt[0] for pt in N13_p05], [pt[3] for pt in N13_p05], 'o-', label='$N=2^{13},\\ p_1 =0.5$')\n",
    "plt.plot([pt[0] for pt in N13_p08], [pt[3] for pt in N13_p08], 'o-', label='$N=2^{13},\\ p_1 =0.8$')\n",
    "\n",
    "plt.legend(loc=0)\n",
    "plt.xlabel('Square matrix dimension')\n",
    "plt.ylabel('Runtime (sec)')\n",
    "\n",
    "plt.savefig('Figure4.png', dpi=300)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
